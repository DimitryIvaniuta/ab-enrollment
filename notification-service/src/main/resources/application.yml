spring:
  application:
    name: notification-service

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
      security.protocol: SASL_SSL
      ssl.truststore.location: ${KAFKA_TRUSTSTORE_LOCATION:classpath:truststore.jks}
      ssl.truststore.password: ${KAFKA_TRUSTSTORE_PASSWORD:mypassord}
      ssl.keystore.location: ${KAFKA_KEYSTORE_LOCATION:classpath:keystore.jks}
      ssl.keystore.password: ${KAFKA_KEYSTORE_PASSWORD:mypassord}
      ssl.key.password: ${KAFKA_KEY_PASSWORD:mypassord}
      sasl.mechanism: SCRAM-SHA-512
      sasl.jaas.config: >
        org.apache.kafka.common.security.scram.ScramLoginModule required
        username="${KAFKA_USERNAME:notify_user}"
        password="${KAFKA_PASSWORD:password}";

    consumer:
      group-id: notification-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      auto-offset-reset: earliest
      properties:
        specific.avro.reader: true

  mail:
    host: ${MAIL_HOST:smtp.example.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: ${SERVER_PORT:8083}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always
